ShowTitle("任我行死後，向問天繼任成為日月神教的教主，向左使為人雖然桀驁不馴，卻沒有太大的野心，與正派也算是相安無事。", 28421);
ShowTitle("五毒教退回雲南地界，並在兩位中間人的引導下，與中原武林和睦相處。", 28421);
ShowTitle("蛇島一戰，神龍教自教主洪安通以下，幾乎全軍覆沒，對武林不再構成威脅。", 28421);
ShowTitle("明教教主張無忌宅心仁厚，在其帶領下，眾教徒努力消除與中原各派的誤會，化干戈為玉帛。", 28421);
ShowTitle("正道各派重建，五嶽劍派空缺的掌門之位已經由新一代補上；而南北少林期間歷經的數次劫難，在南少林重建後也終於告一段落；各派摒棄成見，結成緊密同盟，一派有事，各派互救，武林迎來了一個空前和平的年代。", 28421);
instruct_50(43, 0, 1755, 0, 0, 0, 0);
instruct_50(43, 0, 1571, 0, 0, 0, 0);
instruct_50(43, 8, 242, 0, 0, 7000, 0);
instruct_50(43, 8, 242, 1, 1, 7001, 0);
instruct_50(43, 8, 242, 2, 2, 7002, 0);
instruct_50(35, 0, 0, 0, 0, 0, 0);
instruct_50(43, 8, 242, 3, 8, 7003, 0);
instruct_50(43, 8, 242, 4, 4, 7004, 0);
instruct_50(43, 8, 242, 5, 7, 7005, 0);
instruct_50(35, 0, 0, 0, 0, 0, 0);
instruct_50(43, 8, 242, 6, 6, 7006, 0);
instruct_50(43, 8, 242, 7, 21, 7007, 0);
instruct_50(43, 8, 242, 8, 34, 7008, 0);
instruct_50(35, 0, 0, 0, 0, 0, 0);
instruct_50(43, 8, 242, 9, 11, 7009, 0);
instruct_50(43, 8, 242, 10, 3, 7010, 0);
instruct_50(43, 8, 242, 11, 14, 7011, 0);
instruct_50(35, 0, 0, 0, 0, 0, 0);
instruct_50(43, 8, 242, 12, 12, 7012, 0);
instruct_50(43, 8, 242, 13, 13, 7013, 0);
instruct_50(43, 8, 242, 14, 23, 7014, 0);
instruct_50(35, 100, 0, 0, 0, 0, 0);
instruct_50(43, 8, 242, 15, 31, 7015, 0);
instruct_50(43, 8, 242, 16, 16, 7016, 0);
instruct_50(43, 8, 242, 17, 17, 7017, 0);
instruct_50(35, 100, 0, 0, 0, 0, 0);
instruct_50(43, 8, 242, 18, 18, 7018, 0);
instruct_50(43, 8, 242, 19, 5, 7019, 0);
instruct_50(43, 8, 242, 20, 20, 7020, 0);
instruct_50(35, 100, 0, 0, 0, 0, 0);
instruct_50(43, 8, 242, 21, 22, 7021, 0);
instruct_50(43, 8, 242, 22, 26, 7022, 0);
instruct_50(43, 8, 242, 23, 27, 7023, 0);
instruct_50(35, 0, 0, 0, 0, 0, 0);
instruct_50(43, 8, 242, 24, 24, 7024, 0);
instruct_50(43, 8, 242, 25, 25, 7025, 0);
instruct_50(43, 8, 242, 26, 19, 7026, 0);
instruct_50(35, 100, 0, 0, 0, 0, 0);
instruct_50(43, 8, 242, 27, 30, 7027, 0);
instruct_50(43, 8, 242, 28, 28, 7028, 0);
instruct_50(43, 8, 242, 29, 29, 7029, 0);
instruct_50(35, 100, 0, 0, 0, 0, 0);
instruct_50(43, 8, 242, 30, 15, 7030, 0);
instruct_50(43, 8, 242, 31, 32, 7031, 0);
instruct_50(43, 8, 242, 32, 10, 7032, 0);
instruct_50(35, 100, 0, 0, 0, 0, 0);
instruct_50(43, 8, 242, 33, 33, 7033, 0);
instruct_50(43, 8, 242, 34, 9, 7034, 0);
instruct_50(17, 0, 0, 166, 118, 2, 0);
instruct_50(4, 0, 2, 2, 1, 0, 0);
if CheckJumpFlag() == true then goto label0 end;
    instruct_50(43, 8, 242, 35, 35, 7035, 0);
    if JudgeSexual(0) == true then goto label1 end;
::label0::
        instruct_50(43, 0, 242, 35, 35, 15378, 0);
::label1::
        instruct_50(35, 100, 0, 0, 0, 0, 0);
        instruct_50(0, 0, 36, 0, 0, 0, 0);
        instruct_50(0, 1, 13415, 0, 0, 0, 0);
        instruct_50(43, 10, 242, 0, 36, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 38, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 46, 1, 0);
        instruct_50(35, 100, 0, 0, 0, 0, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 39, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 40, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 41, 1, 0);
        instruct_50(35, 100, 0, 0, 0, 0, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 48, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 43, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 49, 1, 0);
        instruct_50(35, 100, 0, 0, 0, 0, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 45, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 89, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 47, 1, 0);
        instruct_50(35, 100, 0, 0, 0, 0, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 37, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 50, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 51, 1, 0);
        instruct_50(35, 100, 0, 0, 0, 0, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 74, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 52, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 92, 1, 0);
        instruct_50(35, 100, 0, 0, 0, 0, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 93, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 77, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 44, 1, 0);
        instruct_50(35, 100, 0, 0, 0, 0, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 57, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 58, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 59, 1, 0);
        instruct_50(35, 100, 0, 0, 0, 0, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 69, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 64, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 65, 1, 0);
        instruct_50(35, 100, 0, 0, 0, 0, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(43, 10, 242, 0, 66, 1, 0);
        instruct_50(3, 0, 0, 0, 0, 1, 0);
        instruct_50(3, 0, 0, 1, 1, 1, 0);
        instruct_50(17, 0, 0, 166, 118, 2, 0);
        instruct_50(4, 0, 2, 2, 2, 0, 0);
        if CheckJumpFlag() == true then goto label2 end;
            instruct_50(43, 10, 242, 0, 85, 1, 0);
            if JudgeSexual(0) == true then goto label3 end;
::label2::
                instruct_50(43, 2, 242, 0, 85, 15379, 0);
::label3::
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 55, 1, 0);
                instruct_50(35, 100, 0, 0, 0, 0, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 54, 1, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 72, 1, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 73, 1, 0);
                instruct_50(35, 100, 0, 0, 0, 0, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 88, 1, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 102, 1, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 71, 1, 0);
                instruct_50(35, 100, 0, 0, 0, 0, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 96, 1, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 76, 1, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 68, 1, 0);
                instruct_50(35, 100, 0, 0, 0, 0, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 78, 1, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 79, 1, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 42, 1, 0);
                instruct_50(35, 100, 0, 0, 0, 0, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 81, 1, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 82, 1, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(43, 10, 242, 0, 83, 1, 0);
                instruct_50(35, 100, 0, 0, 0, 0, 0);
                instruct_50(3, 0, 0, 0, 0, 1, 0);
                instruct_50(3, 0, 0, 1, 1, 1, 0);
                instruct_50(17, 0, 0, 166, 118, 2, 0);
                instruct_50(4, 0, 2, 2, 3, 0, 0);
                if CheckJumpFlag() == true then goto label4 end;
                    instruct_50(43, 10, 242, 0, 84, 1, 0);
                    if JudgeSexual(0) == true then goto label5 end;
::label4::
                        instruct_50(43, 2, 242, 0, 84, 15380, 0);
::label5::
                        instruct_50(3, 0, 0, 0, 0, 1, 0);
                        instruct_50(3, 0, 0, 1, 1, 1, 0);
                        instruct_50(43, 10, 242, 0, 53, 1, 0);
                        instruct_50(3, 0, 0, 0, 0, 1, 0);
                        instruct_50(3, 0, 0, 1, 1, 1, 0);
                        instruct_50(43, 10, 242, 0, 80, 1, 0);
                        instruct_50(35, 100, 0, 0, 0, 0, 0);
                        instruct_50(3, 0, 0, 0, 0, 1, 0);
                        instruct_50(3, 0, 0, 1, 1, 1, 0);
                        instruct_50(43, 10, 242, 0, 56, 1, 0);
                        instruct_50(3, 0, 0, 0, 0, 1, 0);
                        instruct_50(3, 0, 0, 1, 1, 1, 0);
                        instruct_50(43, 10, 242, 0, 95, 1, 0);
                        instruct_50(3, 0, 0, 0, 0, 1, 0);
                        instruct_50(3, 0, 0, 1, 1, 1, 0);
                        instruct_50(43, 10, 242, 0, 70, 1, 0);
                        instruct_50(35, 100, 0, 0, 0, 0, 0);
                        instruct_50(3, 0, 0, 0, 0, 1, 0);
                        instruct_50(3, 0, 0, 1, 1, 1, 0);
                        instruct_50(43, 10, 242, 0, 90, 1, 0);
                        instruct_50(3, 0, 0, 0, 0, 1, 0);
                        instruct_50(3, 0, 0, 1, 1, 1, 0);
                        instruct_50(43, 10, 242, 0, 97, 1, 0);
                        instruct_50(3, 0, 0, 0, 0, 1, 0);
                        instruct_50(3, 0, 0, 1, 1, 1, 0);
                        instruct_50(43, 10, 242, 0, 104, 1, 0);
                        instruct_50(35, 100, 0, 0, 0, 0, 0);
                        instruct_50(3, 0, 0, 0, 0, 1, 0);
                        instruct_50(3, 0, 0, 1, 1, 1, 0);
                        instruct_50(43, 10, 242, 0, 105, 1, 0);
                        instruct_50(3, 0, 0, 0, 0, 1, 0);
                        instruct_50(3, 0, 0, 1, 1, 1, 0);
                        instruct_50(43, 10, 242, 0, 91, 1, 0);
                        instruct_50(3, 0, 0, 0, 0, 1, 0);
                        instruct_50(3, 0, 0, 1, 1, 1, 0);
                        instruct_50(43, 10, 242, 0, 67, 1, 0);
                        instruct_50(35, 100, 0, 0, 0, 0, 0);
                        instruct_50(3, 0, 0, 0, 0, 1, 0);
                        instruct_50(3, 0, 0, 1, 1, 1, 0);
                        instruct_50(43, 10, 242, 0, 75, 1, 0);
                        instruct_50(3, 0, 0, 0, 0, 1, 0);
                        instruct_50(3, 0, 0, 1, 1, 1, 0);
                        instruct_50(43, 10, 242, 0, 369, 1, 0);
                        instruct_50(3, 0, 0, 0, 0, 1, 0);
                        instruct_50(3, 0, 0, 1, 1, 1, 0);
                        instruct_50(17, 0, 0, 166, 62, 2, 0);
                        instruct_50(4, 0, 2, 2, 1, 0, 0);
                        if CheckJumpFlag() == true then goto label6 end;
                            instruct_50(43, 10, 242, 0, 430, 1, 0);
                            if JudgeSexual(0) == true then goto label7 end;
::label6::
                                instruct_50(43, 2, 242, 0, 430, 14311, 0);
::label7::
                                instruct_50(35, 100, 0, 0, 0, 0, 0);
                                instruct_50(3, 0, 0, 0, 0, 1, 0);
                                instruct_50(3, 0, 0, 1, 1, 1, 0);
                                instruct_50(43, 10, 242, 0, 99, 1, 0);
                                instruct_50(3, 0, 0, 0, 0, 1, 0);
                                instruct_50(3, 0, 0, 1, 1, 1, 0);
                                instruct_50(43, 10, 242, 0, 100, 1, 0);
                                instruct_50(3, 0, 0, 0, 0, 1, 0);
                                instruct_50(3, 0, 0, 1, 1, 1, 0);
                                instruct_50(43, 10, 242, 0, 101, 1, 0);
                                instruct_50(35, 100, 0, 0, 0, 0, 0);
                                instruct_50(3, 0, 0, 0, 0, 1, 0);
                                instruct_50(3, 0, 0, 1, 1, 1, 0);
                                instruct_50(43, 10, 242, 0, 98, 1, 0);
                                instruct_50(3, 0, 0, 0, 0, 1, 0);
                                instruct_50(3, 0, 0, 1, 1, 1, 0);
                                instruct_50(43, 10, 242, 0, 103, 1, 0);
                                instruct_50(3, 0, 0, 0, 0, 1, 0);
                                instruct_50(3, 0, 0, 1, 1, 1, 0);
                                instruct_50(43, 10, 242, 0, 87, 1, 0);
                                instruct_50(35, 100, 0, 0, 0, 0, 0);
                                instruct_50(3, 0, 0, 0, 0, 1, 0);
                                instruct_50(3, 0, 0, 1, 1, 1, 0);
                                instruct_50(43, 10, 242, 0, 86, 1, 0);
                                instruct_50(3, 0, 0, 0, 0, 1, 0);
                                instruct_50(3, 0, 0, 1, 1, 1, 0);
                                instruct_50(43, 10, 242, 0, 107, 1, 0);
                                instruct_50(3, 0, 0, 0, 0, 1, 0);
                                instruct_50(3, 0, 0, 1, 1, 1, 0);
                                instruct_50(43, 10, 242, 0, 106, 1, 0);
                                instruct_50(35, 100, 0, 0, 0, 0, 0);
                                instruct_50(3, 0, 0, 0, 0, 1, 0);
                                instruct_50(3, 0, 0, 1, 1, 1, 0);
                                instruct_50(43, 10, 242, 0, 431, 1, 0);
                                instruct_50(3, 0, 0, 0, 0, 1, 0);
                                instruct_50(3, 0, 0, 1, 1, 1, 0);
                                instruct_50(43, 10, 242, 0, 114, 1, 0);
                                instruct_50(3, 0, 0, 0, 0, 1, 0);
                                instruct_50(3, 0, 0, 1, 1, 1, 0);
                                instruct_50(43, 10, 242, 0, 432, 1, 0);
                                instruct_50(35, 100, 0, 0, 0, 0, 0);
                                instruct_50(17, 0, 0, 166, 118, 0, 0);
                                instruct_50(4, 0, 2, 0, 0, 0, 0);
                                if CheckJumpFlag() == true then goto label8 end;
                                    instruct_50(4, 0, 2, 0, 1, 0, 0);
                                    if CheckJumpFlag() == true then goto label9 end;
                                        instruct_50(4, 0, 2, 0, 2, 0, 0);
                                        if CheckJumpFlag() == true then goto label10 end;
                                            instruct_50(43, 0, 1751, 0, 0, 0, 0);
                                            Talk(424, "一切終於結束了。", -2, 0, 0, 0);
                                            Talk(0, "不。", -2, 1, 0, 0);
                                            Talk(422, "現在，才是一切的開始。", -2, 0, 0, 0);
                                            ShowTitle("武林，由璀璨歸於平淡**而平淡**正好孕育另一個絢爛。", 28421);
                                            EndAmination(0, 0, 0, 0, 0, 0, 7);
                                            exit();
::label10::
                                            instruct_50(43, 0, 1750, 0, 0, 0, 0);
                                            Talk(424, "一切終於結束了。", -2, 0, 0, 28515);
                                            Talk(0, "不。", -2, 1, 0, 28515);
                                            Talk(422, "現在，才是一切的開始。", -2, 0, 0, 28515);
                                            ShowTitle("武林，由璀璨歸於平淡**而平淡**正好孕育另一個絢爛。", 28421);
                                            EndAmination(0, 0, 0, 0, 0, 0, 7);
                                            exit();
::label9::
                                            instruct_50(43, 0, 1749, 0, 0, 0, 0);
::label8::
                                            Talk(0, "一切終於結束了。", -2, 0, 0, 28515);
                                            Talk(0, "不。", -2, 1, 0, 28515);
                                            Talk(422, "現在，才是一切的開始。", -2, 0, 0, 28515);
                                            ShowTitle("武林，由璀璨歸於平淡**而平淡**正好孕育另一個絢爛。", 28421);
                                            EndAmination(0, 0, 0, 0, 0, 0, -1);
exit();
